@{
    ViewData["Title"] = "Employee Dashboard";
}
<!--Claude AI was used to fix alignment issues and recommended the addition of the JS at the bottom for error messages and validation, 
    as well as added the JS to help display the products along with the farmer details as I was having issues with that
-->
<style>
    .border-right {
        border-right: 1px solid #dee2e6;
    }

    .col-md-6 {
        padding: 20px;
        min-height: 70vh;
    }

    h1 {
        margin-bottom: 30px;
        font-size: 2.5rem;
    }

    footer {
        display: none;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .btn-primary {
        background-color: #4CAF50;
        border-color: #4CAF50;
        padding: 12px 30px;
        width: 100%;
        max-width: 300px;
        display: block;
        margin: 0 auto;
    }

        .btn-primary:hover {
            background-color: #45a049;
            border-color: #45a049;
        }

    .btn-outline-primary {
        color: #4CAF50;
        border-color: #4CAF50;
        padding: 8px 20px;
    }

        .btn-outline-primary:hover {
            background-color: #4CAF50;
            color: white;
        }

    .card {
        margin-bottom: 30px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        border-radius: 8px;
    }

    .card-header {
        background-color: #f8f9fa;
        padding: 15px 20px;
        border-bottom: 1px solid #dee2e6;
        border-radius: 8px 8px 0 0;
    }

    .card-body {
        padding: 20px;
    }

    .table {
        margin-top: 15px;
    }

        .table th {
            background-color: #f8f9fa;
        }

    .badge {
        font-size: 85%;
        padding: 5px 10px;
        border-radius: 30px;
    }

    .badge-success {
        background-color: #28a745;
        color: white;
    }

    .badge-warning {
        background-color: #ffc107;
        color: #212529;
    }

    .badge-info {
        background-color: #17a2b8;
        color: white;
    }

    .date-range-container {
        display: flex;
        gap: 10px;
    }

        .date-range-container .form-control {
            width: 100%;
        }
</style>

<div class="container-fluid">
    <!-- Centered Header -->
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h1>Welcome to the Employee Dashboard</h1>
        </div>
    </div>
    <!-- Content Sections -->
    <div class="row">
        <!-- Left Side -->
        <div class="col-md-6 border-right">
            <div style="max-width: 85%; margin-bottom: 20px;">
                <h2 class="mb-4 text-center">Add Farmer</h2>
            </div>
            <div class="card" style="max-width: 85%; margin-left: 0;">
                <div class="card-header">
                    <h4>Farmer Registration Form</h4>
                </div>
                <div class="card-body">
                    @if (ViewBag.Error != null)
                    {
                        <div class="alert alert-danger" role="alert">
                            @ViewBag.Error
                        </div>
                    }
                    @if (ViewBag.Success != null)
                    {
                        <div class="alert alert-success" role="alert">
                            @ViewBag.Success
                        </div>
                    }
                    <form asp-action="AddFarmer" asp-controller="Employee" method="post">
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label for="FarmerUserName">Username (Email)</label>
                            <input type="email" class="form-control" id="FarmerUserName" name="FarmerUserName"
                                   placeholder="farmer@example.com" required>
                        </div>
                        <div class="form-group">
                            <label for="FarmerPassword">Password</label>
                            <input type="password" class="form-control" id="FarmerPassword" name="FarmerPassword" required>
                        </div>
                        <div class="form-group">
                            <label for="FarmerContactNum">Contact Number</label>
                            <input type="tel" class="form-control" id="FarmerContactNum" name="FarmerContactNum"
                                   placeholder="e.g., 0123456789" required>
                        </div>
                        <div class="form-group text-center">
                            <button type="submit" class="btn btn-primary">Register Farmer</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- Right Side -->
        <div class="col-md-6">
            <div style="max-width: 95%; margin-bottom: 20px;">
                <h2 class="mb-4 text-center">View Farmers/Products</h2>
            </div>

            <!-- Filter Card -->
            <div class="card" style="max-width: 95%;">
                <div class="card-header">
                    <h4>Filter Options</h4>
                </div>
                <div class="card-body">
                    <form id="filterForm">
                        <div class="form-group">
                            <label for="farmerName">Farmer Name</label>
                            <input type="text" class="form-control" id="farmerName" placeholder="Search by farmer name">
                        </div>

                        <div class="form-group">
                            <label for="productCategory">Product Category</label>
                            <select class="form-control" id="productCategory">
                                <option value="">All Categories</option>
                                <option value="Vegetables">Vegetables</option>
                                <option value="Fruits">Fruits</option>
                                <option value="Dairy">Dairy</option>
                                <option value="Grains">Grains</option>
                                <option value="Livestock">Livestock</option>
                                <option value="Poultry">Poultry</option>
                                <option value="Organic">Organic</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Date Range</label>
                            <div class="date-range-container">
                                <div>
                                    <label for="fromDate">From</label>
                                    <input type="date" class="form-control" id="fromDate">
                                </div>
                                <div>
                                    <label for="toDate">To</label>
                                    <input type="date" class="form-control" id="toDate">
                                </div>
                            </div>
                        </div>

                        <div class="text-center">
                            <button type="button" class="btn btn-primary">Apply Filters</button>
                            <button type="button" class="btn btn-outline-primary ml-2">Reset</button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Results Table -->
            <div class="card" style="max-width: 95%;">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4>Farmers/Products List</h4>
                    <span class="badge badge-info">0 Results</span>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Farmer</th>
                                    <th>Products</th>
                                    <th>Production Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Data will be populated dynamically -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get filter elements
            const farmerNameInput = document.getElementById('farmerName');
            const productCategorySelect = document.getElementById('productCategory');
                const fromDateInput = document.getElementById('fromDate');
                    const toDateInput = document.getElementById('toDate');
                    const applyFilterBtn = document.querySelector('.btn-primary');
                    const resetFilterBtn = document.querySelector('.btn-outline-primary');
                    const resultsCount = document.querySelector('.badge-info');
                    const resultsTable = document.querySelector('table tbody');

                    // Initialize with empty filter to load all data
                    loadFarmersWithProducts();

                    // Add event listeners
                    applyFilterBtn.addEventListener('click', function() {
                        loadFarmersWithProducts();
                    });

                    resetFilterBtn.addEventListener('click', function() {
                        farmerNameInput.value = '';
                        productCategorySelect.value = '';
                        fromDateInput.value = '';
                        toDateInput.value = '';
                        loadFarmersWithProducts();
                    });

                    // Function to load farmers with products
                    function loadFarmersWithProducts() {
                        const farmerName = farmerNameInput.value.trim();
                        const productCategory = productCategorySelect.value;
                        const fromDate = fromDateInput.value ? fromDateInput.value : null;
                        const toDate = toDateInput.value ? toDateInput.value : null;

                        // Build query string
                        let queryParams = new URLSearchParams();
                        if (farmerName) queryParams.append('farmerName', farmerName);
                        if (productCategory) queryParams.append('productCategory', productCategory);
                        if (fromDate) queryParams.append('fromDate', fromDate);
                        if (toDate) queryParams.append('toDate', toDate);

                        // Make AJAX request
                        fetch(`/Employee/GetFarmersWithProducts?${queryParams.toString()}`)
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    displayFarmersWithProducts(data.data);
                                    resultsCount.textContent = `${data.count} Results`;
                                } else {
                                    console.error('Error:', data.message);
                                    resultsTable.innerHTML = `<tr><td colspan="3" class="text-center text-danger">Error: ${data.message}</td></tr>`;
                                    resultsCount.textContent = '0 Results';
                                }
                            })
                            .catch(error => {
                                console.error('Fetch error:', error);
                                resultsTable.innerHTML = '<tr><td colspan="3" class="text-center text-danger">Error fetching data. Please try again.</td></tr>';
                                resultsCount.textContent = '0 Results';
                            });
                    }

                    // Function to display farmers with products in the table
                    function displayFarmersWithProducts(data) {
                        resultsTable.innerHTML = '';

                        if (data.length === 0) {
                            resultsTable.innerHTML = '<tr><td colspan="3" class="text-center">No results found</td></tr>';
                            return;
                        }

                        // Group by farmer
                        const farmerGroups = {};
                        data.forEach(item => {
                            if (!farmerGroups[item.farmerId]) {
                                farmerGroups[item.farmerId] = {
                                    farmer: item.farmerUserName,
                                    contactNum: item.farmerContactNum,
                                    products: []
                                };
                            }

                            // Only add product if it exists
                            if (item.productName && item.productName !== "No products") {
                                farmerGroups[item.farmerId].products.push({
                                    name: item.productName,
                                    category: item.productCategory,
                                    date: item.productionDate ? new Date(item.productionDate).toLocaleDateString() : 'N/A'
                                });
                            }
                        });

                        // Create table rows
                        Object.values(farmerGroups).forEach(group => {
                            const row = document.createElement('tr');

                            // Farmer column with contact number
                            const farmerCell = document.createElement('td');
                            farmerCell.innerHTML = `<strong>${group.farmer}</strong><br><small>${group.contactNum}</small>`;
                            row.appendChild(farmerCell);

                            // Products column
                            const productsCell = document.createElement('td');
                            if (group.products.length === 0) {
                                productsCell.textContent = 'No products';
                            } else {
                                const productsList = document.createElement('ul');
                                productsList.className = 'list-unstyled mb-0';
                                group.products.forEach(product => {
                                    const productItem = document.createElement('li');
                                    productItem.innerHTML = `<span class="badge badge-success">${product.category}</span> ${product.name}`;
                                    productsList.appendChild(productItem);
                                });
                                productsCell.appendChild(productsList);
                            }
                            row.appendChild(productsCell);

                            // Production dates column
                            const datesCell = document.createElement('td');
                            if (group.products.length === 0) {
                                datesCell.textContent = 'N/A';
                            } else {
                                const datesList = document.createElement('ul');
                                datesList.className = 'list-unstyled mb-0';
                                group.products.forEach(product => {
                                    const dateItem = document.createElement('li');
                                    dateItem.textContent = product.date;
                                    datesList.appendChild(dateItem);
                                });
                                datesCell.appendChild(datesList);
                            }
                            row.appendChild(datesCell);

                            resultsTable.appendChild(row);
                        });
                    }
                });
    </script>
}
}